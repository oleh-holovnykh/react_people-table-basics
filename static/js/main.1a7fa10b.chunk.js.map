{"version":3,"sources":["components/HomePage/HomePage.tsx","components/NavBar/NavBar.tsx","components/NotFoundPage/NotFoundPage.tsx","api.ts","utils/helpers.tsx","components/Loader/Loader.tsx","components/PersonLink/PersonLink.tsx","components/PersonString/PersonString.tsx","components/PeopleTable/PeopleTable.tsx","components/PeoplePage/PeoplePage.tsx","App.tsx","index.tsx"],"names":["HomePage","React","memo","className","NavBar","role","to","isActive","classNames","NotFoundPage","API_URL","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","preparedPeople","people","map","person","mother","find","parent","name","motherName","father","fatherName","Loader","PersonLink","slug","sex","cn","PersonString","personSlug","born","died","isSelected","displayFatherName","displayMotherName","PeopleTable","hasError","length","PeoplePage","useParams","useState","setPeople","isLoading","setIsLoading","setHasError","useEffect","fetchPeople","peopleFromServer","peopleWithParents","App","path","element","replace","index","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.1a7fa10b.chunk.js","sourcesContent":["import React from 'react';\n\nexport const HomePage: React.FC = React.memo(() => {\n  return (\n    <h1 className=\"title\">Home Page</h1>\n  );\n});\n","import classNames from 'classnames';\nimport React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nexport const NavBar: React.FC = React.memo(() => (\n  <nav\n    data-cy=\"nav\"\n    className=\"navbar is-fixed-top has-shadow\"\n    role=\"navigation\"\n    aria-label=\"main navigation\"\n  >\n    <div className=\"container\">\n      <div className=\"navbar-brand\">\n        <NavLink\n          to=\"/\"\n          className={({ isActive }) => classNames('navbar-item', {\n            'has-background-grey-lighter': isActive,\n          })}\n        >\n          Home\n        </NavLink>\n\n        <NavLink\n          to=\"/people\"\n          className={({ isActive }) => classNames(\n            'navbar-item', {\n              'has-background-grey-lighter': isActive,\n            },\n          )}\n        >\n          People\n        </NavLink>\n      </div>\n    </div>\n  </nav>\n));\n","import React from 'react';\n\nexport const NotFoundPage: React.FC = React.memo(() => (\n  <h1 className=\"title\">Page not found</h1>\n));\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import { Person } from '../types';\n\nexport const preparedPeople = (people: Person []) => {\n  return people.map(person => {\n    return {\n      ...person,\n      mother: people.find(parent => parent.name === person.motherName) || null,\n      father: people.find(parent => parent.name === person.fatherName) || null,\n    };\n  });\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader = React.memo(() => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n));\n","import cn from 'classnames';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Person } from '../../types';\n\ninterface Props {\n  person: Person\n}\n\nexport const PersonLink: React.FC<Props> = React.memo(({ person }) => {\n  const {\n    name,\n    slug,\n    sex,\n  } = person;\n\n  return (\n    <Link\n      to={`/people/${slug}`}\n      className={cn({\n        'has-text-danger': sex === 'f',\n      })}\n    >\n      {name}\n    </Link>\n  );\n});\n","import cn from 'classnames';\nimport React from 'react';\nimport { Person } from '../../types';\nimport { PersonLink } from '../PersonLink';\n\ninterface Props {\n  person: Person;\n  personSlug: string;\n}\n\nexport const PersonString:React.FC<Props> = React.memo(\n  ({ person, personSlug }) => {\n    const {\n      sex,\n      born,\n      died,\n      fatherName,\n      motherName,\n      slug,\n      mother,\n      father,\n    } = person;\n\n    const isSelected = personSlug === slug;\n    const displayFatherName = fatherName || '-';\n    const displayMotherName = motherName || '-';\n\n    return (\n      <tr\n        data-cy=\"person\"\n        className={cn({\n          'has-background-warning': isSelected,\n        })}\n      >\n        <td>\n          <PersonLink person={person} />\n        </td>\n\n        <td>{sex}</td>\n        <td>{born}</td>\n        <td>{died}</td>\n        <td>\n          {mother\n            ? <PersonLink person={mother} />\n            : displayMotherName}\n        </td>\n        <td>\n          {father\n            ? <PersonLink person={father} />\n            : displayFatherName}\n        </td>\n      </tr>\n    );\n  },\n);\n","import React from 'react';\nimport { Person } from '../../types';\nimport { PersonString } from '../PersonString';\n\ninterface Props {\n  people: Person[],\n  personSlug: string,\n  hasError: boolean,\n}\n\nexport const PeopleTable: React.FC<Props> = React.memo(({\n  people,\n  personSlug,\n  hasError,\n}) => {\n  if (hasError) {\n    return (\n      <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n        Something went wrong\n      </p>\n    );\n  }\n\n  if (!people.length) {\n    return (\n      <p data-cy=\"noPeopleMessage\">\n        There are no people on the server\n      </p>\n    );\n  }\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map(person => (\n          <PersonString\n            key={person.slug}\n            person={person}\n            personSlug={personSlug}\n          />\n        ))}\n      </tbody>\n    </table>\n  );\n});\n","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getPeople } from '../../api';\nimport { Person } from '../../types';\nimport { preparedPeople } from '../../utils/helpers';\nimport { Loader } from '../Loader';\nimport { PeopleTable } from '../PeopleTable';\n\nexport const PeoplePage: React.FC = React.memo(() => {\n  const { slug = '' } = useParams();\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [hasError, setHasError] = useState(false);\n\n  useEffect(() => {\n    const fetchPeople = async () => {\n      setIsLoading(true);\n\n      try {\n        const peopleFromServer = await getPeople();\n        const peopleWithParents = preparedPeople(peopleFromServer);\n\n        setPeople(peopleWithParents);\n      } catch {\n        setHasError(true);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchPeople();\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoading\n            ? <Loader />\n            : (\n              <PeopleTable\n                people={people}\n                personSlug={slug}\n                hasError={hasError}\n              />\n            )}\n        </div>\n      </div>\n    </>\n  );\n});\n","// import { Loader } from './components/Loader';\n\nimport { Navigate, Route, Routes } from 'react-router-dom';\nimport './App.scss';\nimport { HomePage } from './components/HomePage';\nimport { NavBar } from './components/NavBar';\nimport { NotFoundPage } from './components/NotFoundPage';\nimport { PeoplePage } from './components/PeoplePage';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <NavBar />\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Routes>\n          <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n          <Route path=\"/\" element={<HomePage />} />\n\n          <Route path=\"/people\">\n            <Route index element={<PeoplePage />} />\n            <Route path=\":slug\" element={<PeoplePage />} />\n          </Route>\n\n          <Route path=\"*\" element={<NotFoundPage />} />\n        </Routes>\n      </div>\n    </main>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}