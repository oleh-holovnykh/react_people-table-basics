{"version":3,"sources":["types/LoadingStatus.ts","components/HomePage/HomePage.tsx","components/NavBar/NavBar.tsx","components/NotFoundPage/NotFoundPage.tsx","api.ts","components/Loader/Loader.tsx","utils/helpers.tsx","components/PersonLink/PersonLink.tsx","components/PeopleTable/PeopleTable.tsx","components/PeoplePage/PeoplePage.tsx","App.tsx","index.tsx"],"names":["LoadingStatus","HomePage","className","NavBar","role","to","isActive","classNames","NotFoundPage","API_URL","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","findParent","parentName","people","find","person","name","PersonLink","slug","sex","cn","PeopleTable","personSlug","length","map","born","died","fatherName","motherName","isSelected","displayFatherName","displayMotherName","father","mother","PeoplePage","useParams","useState","setPeople","NONE","loadingStatus","setLoadingStatus","fetchPeople","useCallback","ISLOADING","peopleFromServer","SUCCESS","ERROR","useEffect","isLoading","hasError","loadingSuccess","App","path","element","replace","index","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.52584f77.chunk.js","sourcesContent":["export enum LoadingStatus {\n  NONE,\n  ISLOADING,\n  ERROR,\n  SUCCESS,\n}\n","export const HomePage: React.FC = () => {\n  return (\n    <h1 className=\"title\">Home Page</h1>\n  );\n};\n","import classNames from 'classnames';\nimport { NavLink } from 'react-router-dom';\n\nexport const NavBar: React.FC = () => (\n  <nav\n    data-cy=\"nav\"\n    className=\"navbar is-fixed-top has-shadow\"\n    role=\"navigation\"\n    aria-label=\"main navigation\"\n  >\n    <div className=\"container\">\n      <div className=\"navbar-brand\">\n        <NavLink\n          to=\"/\"\n          className={({ isActive }) => classNames('navbar-item', {\n            'has-background-grey-lighter': isActive,\n          })}\n        >\n          Home\n        </NavLink>\n\n        <NavLink\n          to=\"/people\"\n          className={({ isActive }) => classNames(\n            'navbar-item', {\n              'has-background-grey-lighter': isActive,\n            },\n          )}\n        >\n          People\n        </NavLink>\n      </div>\n    </div>\n  </nav>\n);\n","export const NotFoundPage: React.FC = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Person } from '../types';\n\nexport const findParent = (parentName: string, people: Person []) => {\n  return people.find(person => person.name === parentName) || null;\n};\n","import cn from 'classnames';\nimport { Link } from 'react-router-dom';\nimport { Person } from '../../types';\n\ninterface Props {\n  person: Person\n}\n\nexport const PersonLink: React.FC<Props> = ({ person }) => {\n  const {\n    name,\n    slug,\n    sex,\n  } = person;\n\n  return (\n    <Link\n      to={`/people/${slug}`}\n      className={cn({\n        'has-text-danger': sex === 'f',\n      })}\n    >\n      {name}\n    </Link>\n  );\n};\n","import cn from 'classnames';\nimport { Person } from '../../types';\nimport { findParent } from '../../utils/helpers';\nimport { PersonLink } from '../PersonLink';\n\ninterface Props {\n  people: Person[],\n  personSlug: string,\n}\n\nexport const PeopleTable: React.FC<Props> = ({ people, personSlug }) => {\n  return (\n    people.length\n      ? (\n        <table\n          data-cy=\"peopleTable\"\n          className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n        >\n          <thead>\n            <tr>\n              <th>Name</th>\n              <th>Sex</th>\n              <th>Born</th>\n              <th>Died</th>\n              <th>Mother</th>\n              <th>Father</th>\n            </tr>\n          </thead>\n\n          <tbody>\n            {people.map(person => {\n              const {\n                sex,\n                born,\n                died,\n                fatherName,\n                motherName,\n                slug,\n              } = person;\n\n              const isSelected = personSlug === slug;\n              const displayFatherName = fatherName || '-';\n              const displayMotherName = motherName || '-';\n              const father = findParent(displayFatherName, people);\n              const mother = findParent(displayMotherName, people);\n\n              return (\n                <tr\n                  data-cy=\"person\"\n                  className={cn({\n                    'has-background-warning': isSelected,\n                  })}\n                >\n                  <td>\n                    <PersonLink person={person} />\n                  </td>\n\n                  <td>{sex}</td>\n                  <td>{born}</td>\n                  <td>{died}</td>\n                  <td>\n                    {mother\n                      ? <PersonLink person={mother} />\n                      : displayMotherName}\n                  </td>\n                  <td>\n                    {father\n                      ? <PersonLink person={father} />\n                      : displayFatherName}\n                  </td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      )\n      : (\n        <p data-cy=\"noPeopleMessage\">\n          There are no people on the server\n        </p>\n      ));\n};\n","import { useCallback, useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getPeople } from '../../api';\nimport { Person } from '../../types';\nimport { LoadingStatus } from '../../types/LoadingStatus';\nimport { Loader } from '../Loader';\nimport { PeopleTable } from '../PeopleTable';\n\nexport const PeoplePage: React.FC = () => {\n  const { slug = '' } = useParams();\n  const [people, setPeople] = useState<Person[]>([]);\n  const [loadingStatus, setLoadingStatus] = useState<LoadingStatus>(\n    LoadingStatus.NONE,\n  );\n\n  const fetchPeople = useCallback(async () => {\n    setLoadingStatus(LoadingStatus.ISLOADING);\n\n    try {\n      const peopleFromServer = await getPeople();\n\n      setPeople(peopleFromServer);\n\n      if (peopleFromServer) {\n        setLoadingStatus(LoadingStatus.SUCCESS);\n      }\n    } catch {\n      setLoadingStatus(LoadingStatus.ERROR);\n    }\n  }, []);\n\n  useEffect(() => {\n    fetchPeople();\n  }, []);\n\n  const isLoading = loadingStatus === LoadingStatus.ISLOADING;\n  const hasError = loadingStatus === LoadingStatus.ERROR;\n  const loadingSuccess = loadingStatus === LoadingStatus.SUCCESS;\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {(isLoading) && <Loader />}\n\n          {(hasError) && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              Something went wrong\n            </p>\n          )}\n\n          {(loadingSuccess) && (\n            <PeopleTable\n              people={people}\n              personSlug={slug}\n            />\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n","// import { Loader } from './components/Loader';\n\nimport { Navigate, Route, Routes } from 'react-router-dom';\nimport './App.scss';\nimport { HomePage } from './components/HomePage';\nimport { NavBar } from './components/NavBar';\nimport { NotFoundPage } from './components/NotFoundPage';\nimport { PeoplePage } from './components/PeoplePage';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <NavBar />\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Routes>\n          <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n          <Route path=\"/\" element={<HomePage />} />\n\n          <Route path=\"/people\">\n            <Route index element={<PeoplePage />} />\n            <Route path=\":slug\" element={<PeoplePage />} />\n          </Route>\n\n          <Route path=\"*\" element={<NotFoundPage />} />\n        </Routes>\n      </div>\n    </main>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}