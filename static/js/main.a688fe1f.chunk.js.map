{"version":3,"sources":["components/HomePage/HomePage.tsx","components/NavBar/NavBar.tsx","components/NotFoundPage/NotFoundPage.tsx","api.ts","components/Loader/Loader.tsx","components/PersonLink/PersonLink.tsx","components/PersonString/PersonString.tsx","components/PeopleTable/PeopleTable.tsx","components/PeoplePage/PeoplePage.tsx","utils/helpers.tsx","App.tsx","index.tsx"],"names":["HomePage","className","NavBar","role","to","isActive","classNames","NotFoundPage","API_URL","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","PersonLink","person","name","slug","sex","cn","PersonString","personSlug","born","died","fatherName","motherName","mother","father","isSelected","PeopleTable","people","map","PeoplePage","useParams","useState","setPeople","isLoading","setIsLoading","hasError","setHasError","fetchPeople","useCallback","peopleFromServer","useEffect","peopleWithParents","find","parent","preparedPeople","hasData","length","hasEmpty","App","path","element","replace","index","createRoot","document","getElementById","render"],"mappings":"qPAAaA,EAAqB,WAChC,OACE,oBAAIC,UAAU,QAAd,sBAEH,E,gBCDYC,EAAmB,kBAC9B,qBACE,UAAQ,MACRD,UAAU,iCACVE,KAAK,aACL,aAAW,kBAJb,SAME,qBAAKF,UAAU,YAAf,SACE,sBAAKA,UAAU,eAAf,UACE,cAAC,IAAD,CACEG,GAAG,IACHH,UAAW,gBAAGI,EAAH,EAAGA,SAAH,OAAkBC,IAAW,cAAe,CACrD,8BAA+BD,GADtB,EAFb,kBASA,cAAC,IAAD,CACED,GAAG,UACHH,UAAW,gBAAGI,EAAH,EAAGA,SAAH,OAAkBC,IAC3B,cAAe,CACb,8BAA+BD,GAFxB,EAFb,0BAlBwB,ECHnBE,EAAyB,kBACpC,oBAAIN,UAAU,QAAd,2BADoC,E,6BCGhCO,EAAU,oEAMT,SAASC,IAEd,OANYC,EAMA,IALL,IAAIC,SAAQ,SAAAC,GAAO,OAAIC,WAAWD,EAASF,EAAxB,KAMvBI,MAAK,kBAAMC,MAAMP,EAAZ,IACLM,MAAK,SAAAE,GAAQ,OAAIA,EAASC,MAAb,IARlB,IAAcP,CASb,C,WCZYQ,G,MAAS,kBACpB,qBAAKjB,UAAU,SAAS,UAAQ,SAAhC,SACE,qBAAKA,UAAU,qBAFG,GCMTkB,EAA8B,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAE1CC,EAGED,EAHFC,KACAC,EAEEF,EAFFE,KACAC,EACEH,EADFG,IAGF,OACE,cAAC,IAAD,CACEnB,GAAE,kBAAakB,GACfrB,UAAWuB,IAAG,CACZ,kBAA2B,MAARD,IAHvB,SAMGF,GAGN,EChBYI,EAA+B,SAAC,GAA4B,IAA1BL,EAAyB,EAAzBA,OAAQM,EAAiB,EAAjBA,WAEnDH,EAQEH,EARFG,IACAI,EAOEP,EAPFO,KACAC,EAMER,EANFQ,KACAC,EAKET,EALFS,WACAC,EAIEV,EAJFU,WACAR,EAGEF,EAHFE,KACAS,EAEEX,EAFFW,OACAC,EACEZ,EADFY,OAGIC,EAAaP,IAAeJ,EAElC,OACE,qBACE,UAAQ,SACRrB,UAAWuB,IAAG,CACZ,yBAA0BS,IAH9B,UAME,6BACE,cAAC,EAAD,CAAYb,OAAQA,MAGtB,6BAAKG,IACL,6BAAKI,IACL,6BAAKC,IACL,6BACGG,EACG,cAAC,EAAD,CAAYX,OAAQW,IACpBD,GAAc,MAEpB,6BACGE,EACG,cAAC,EAAD,CAAYZ,OAAQY,IACpBH,GAAc,QAIzB,ECzCYK,EAA+B,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAQT,EAAX,EAAWA,WAAX,OAC1C,wBACE,UAAQ,cACRzB,UAAU,uDAFZ,UAIE,gCACE,+BACE,sCACA,qCACA,sCACA,sCACA,wCACA,6CAIJ,gCACGkC,EAAOC,KAAI,SAAAhB,GAAM,OAChB,cAAC,EAAD,CAAcA,OAAQA,EAAQM,WAAYA,GAD1B,QAjBoB,ECA/BW,EAAuB,WAClC,MAAsBC,cAAdhB,YAAR,MAAe,GAAf,EACA,EAA4BiB,mBAAmB,IAA/C,mBAAOJ,EAAP,KAAeK,EAAf,KACA,EAAkCD,oBAAS,GAA3C,mBAAOE,EAAP,KAAkBC,EAAlB,KACA,EAAgCH,oBAAS,GAAzC,mBAAOI,EAAP,KAAiBC,EAAjB,KAEMC,EAAcC,sBAAW,gCAAC,qGAC9BJ,GAAa,GADiB,kBAIGjC,IAJH,OAItBsC,EAJsB,OAM5BP,EAAUO,GANkB,gDAQ5BH,GAAY,GARgB,yBAU5BF,GAAa,GAVe,4EAY7B,IAEHM,qBAAU,WACRH,GACD,GAAE,IAEH,IAAMI,EC9BsB,SAACd,GAC7B,OAAOA,EAAOC,KAAI,SAAAhB,GAChB,OAAO,2BACFA,GADL,IAEEW,OAAQI,EAAOe,MAAK,SAAAC,GAAM,OAAIA,EAAO9B,OAASD,EAAOU,UAA3B,KAA0C,KACpEE,OAAQG,EAAOe,MAAK,SAAAC,GAAM,OAAIA,EAAO9B,OAASD,EAAOS,UAA3B,KAA0C,MAEvE,GACF,CDsB2BuB,CAAejB,GACnCkB,EAAUlB,EAAOmB,OAAS,IAAMb,EAChCc,EAA8B,IAAlBpB,EAAOmB,SAAmBX,IAAeF,EAE3D,OACE,qCACE,oBAAIxC,UAAU,QAAd,yBACA,qBAAKA,UAAU,QAAf,SACE,sBAAKA,UAAU,sBAAf,UACGwC,GAAa,cAAC,EAAD,IAEbE,GACC,mBAAG,UAAQ,qBAAqB1C,UAAU,kBAA1C,kCAKDoD,GACC,cAAC,EAAD,CACElB,OAAQc,EACRvB,WAAYJ,IAIfiC,GACC,mBAAG,UAAQ,kBAAX,sDAQX,EExDYC,EAAM,kBACjB,sBAAK,UAAQ,MAAb,UACE,cAAC,EAAD,IAEA,sBAAMvD,UAAU,UAAhB,SACE,qBAAKA,UAAU,YAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOwD,KAAK,OAAOC,QAAS,cAAC,IAAD,CAAUtD,GAAG,IAAIuD,SAAO,MACpD,cAAC,IAAD,CAAOF,KAAK,IAAIC,QAAS,cAAC,EAAD,MAEzB,eAAC,IAAD,CAAOD,KAAK,UAAZ,UACE,cAAC,IAAD,CAAOG,OAAK,EAACF,QAAS,cAAC,EAAD,MACtB,cAAC,IAAD,CAAOD,KAAK,QAAQC,QAAS,cAAC,EAAD,SAG/B,cAAC,IAAD,CAAOD,KAAK,IAAIC,QAAS,cAAC,EAAD,eAfhB,ECDnBG,qBAAWC,SAASC,eAAe,SAChCC,OACC,cAAC,IAAD,UACE,cAAC,EAAD,M","file":"static/js/main.a688fe1f.chunk.js","sourcesContent":["export const HomePage: React.FC = () => {\n  return (\n    <h1 className=\"title\">Home Page</h1>\n  );\n};\n","import classNames from 'classnames';\nimport { NavLink } from 'react-router-dom';\n\nexport const NavBar: React.FC = () => (\n  <nav\n    data-cy=\"nav\"\n    className=\"navbar is-fixed-top has-shadow\"\n    role=\"navigation\"\n    aria-label=\"main navigation\"\n  >\n    <div className=\"container\">\n      <div className=\"navbar-brand\">\n        <NavLink\n          to=\"/\"\n          className={({ isActive }) => classNames('navbar-item', {\n            'has-background-grey-lighter': isActive,\n          })}\n        >\n          Home\n        </NavLink>\n\n        <NavLink\n          to=\"/people\"\n          className={({ isActive }) => classNames(\n            'navbar-item', {\n              'has-background-grey-lighter': isActive,\n            },\n          )}\n        >\n          People\n        </NavLink>\n      </div>\n    </div>\n  </nav>\n);\n","export const NotFoundPage: React.FC = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import cn from 'classnames';\nimport { Link } from 'react-router-dom';\nimport { Person } from '../../types';\n\ninterface Props {\n  person: Person\n}\n\nexport const PersonLink: React.FC<Props> = ({ person }) => {\n  const {\n    name,\n    slug,\n    sex,\n  } = person;\n\n  return (\n    <Link\n      to={`/people/${slug}`}\n      className={cn({\n        'has-text-danger': sex === 'f',\n      })}\n    >\n      {name}\n    </Link>\n  );\n};\n","import cn from 'classnames';\nimport { Person } from '../../types';\nimport { PersonLink } from '../PersonLink';\n\ninterface Props {\n  person: Person;\n  personSlug: string;\n}\n\nexport const PersonString:React.FC<Props> = ({ person, personSlug }) => {\n  const {\n    sex,\n    born,\n    died,\n    fatherName,\n    motherName,\n    slug,\n    mother,\n    father,\n  } = person;\n\n  const isSelected = personSlug === slug;\n\n  return (\n    <tr\n      data-cy=\"person\"\n      className={cn({\n        'has-background-warning': isSelected,\n      })}\n    >\n      <td>\n        <PersonLink person={person} />\n      </td>\n\n      <td>{sex}</td>\n      <td>{born}</td>\n      <td>{died}</td>\n      <td>\n        {mother\n          ? <PersonLink person={mother} />\n          : motherName || '-'}\n      </td>\n      <td>\n        {father\n          ? <PersonLink person={father} />\n          : fatherName || '-'}\n      </td>\n    </tr>\n  );\n};\n","import { Person } from '../../types';\nimport { PersonString } from '../PersonString';\n\ninterface Props {\n  people: Person[],\n  personSlug: string,\n}\n\nexport const PeopleTable: React.FC<Props> = ({ people, personSlug }) => (\n  <table\n    data-cy=\"peopleTable\"\n    className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n  >\n    <thead>\n      <tr>\n        <th>Name</th>\n        <th>Sex</th>\n        <th>Born</th>\n        <th>Died</th>\n        <th>Mother</th>\n        <th>Father</th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {people.map(person => (\n        <PersonString person={person} personSlug={personSlug} />\n      ))}\n    </tbody>\n  </table>\n);\n","import { useCallback, useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getPeople } from '../../api';\nimport { Person } from '../../types';\nimport { preparedPeople } from '../../utils/helpers';\nimport { Loader } from '../Loader';\nimport { PeopleTable } from '../PeopleTable';\n\nexport const PeoplePage: React.FC = () => {\n  const { slug = '' } = useParams();\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [hasError, setHasError] = useState(false);\n\n  const fetchPeople = useCallback(async () => {\n    setIsLoading(true);\n\n    try {\n      const peopleFromServer = await getPeople();\n\n      setPeople(peopleFromServer);\n    } catch {\n      setHasError(true);\n    } finally {\n      setIsLoading(false);\n    }\n  }, []);\n\n  useEffect(() => {\n    fetchPeople();\n  }, []);\n\n  const peopleWithParents = preparedPeople(people);\n  const hasData = people.length > 0 && !isLoading;\n  const hasEmpty = (people.length === 0) && (!hasError) && (!isLoading);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoading && <Loader />}\n\n          {hasError && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              Something went wrong\n            </p>\n          )}\n\n          {hasData && (\n            <PeopleTable\n              people={peopleWithParents}\n              personSlug={slug}\n            />\n          )}\n\n          {hasEmpty && (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n","import { Person } from '../types';\n\nexport const preparedPeople = (people: Person []) => {\n  return people.map(person => {\n    return {\n      ...person,\n      mother: people.find(parent => parent.name === person.motherName) || null,\n      father: people.find(parent => parent.name === person.fatherName) || null,\n    };\n  });\n};\n","// import { Loader } from './components/Loader';\n\nimport { Navigate, Route, Routes } from 'react-router-dom';\nimport './App.scss';\nimport { HomePage } from './components/HomePage';\nimport { NavBar } from './components/NavBar';\nimport { NotFoundPage } from './components/NotFoundPage';\nimport { PeoplePage } from './components/PeoplePage';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <NavBar />\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Routes>\n          <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n          <Route path=\"/\" element={<HomePage />} />\n\n          <Route path=\"/people\">\n            <Route index element={<PeoplePage />} />\n            <Route path=\":slug\" element={<PeoplePage />} />\n          </Route>\n\n          <Route path=\"*\" element={<NotFoundPage />} />\n        </Routes>\n      </div>\n    </main>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}